version: 2

builds:
  - skip: true

before:
  hooks:
    - |
      sh -c '
        # Exit if no tag is found
        if [ -z "{{ .Tag }}" ]; then
          echo "No tag found. Skipping version update."
          exit 0
        fi

        # Update version/version.go if it exists
        if [ -f version/version.go ]; then
          echo "// Code generated by GoReleaser. DO NOT EDIT." > version/version.go
          echo "package version" >> version/version.go
          echo "" >> version/version.go
          echo "var Version = \"{{ .Tag }}\"" >> version/version.go

          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git checkout -B "release/{{ .Tag }}"
          git add version/version.go
          git diff --cached --quiet || git commit -m "chore: update version to {{ .Tag }}"
          git pull --rebase origin "release/{{ .Tag }}" || true
          git push origin "release/{{ .Tag }}"
        fi
      '

changelog:
  use: github
  groups:
    - title: ✨Features
      regexp: "^feat(\\(.+\\))?!?:\\s.*$"
      order: 0
    - title: 🐞Bug Fixes
      regexp: "^fix(\\(.+\\))?!?:\\s.*$"
      order: 1
    - title: ⚙️Code Refactoring
      regexp: "^refactor(\\(.+\\))?!?:\\s.*$"
      order: 2
    - title: 🕜Performance Improvements
      regexp: "^perf(\\(.+\\))?!?:\\s.*$"
      order: 3
    - title: 🚀Chores
      regexp: "^chore(\\(.+\\))?!?:\\s.*$"
      order: 4
    - title: 🌈Style Improvements
      regexp: "^style(\\(.+\\))?!?:\\s.*$"
      order: 5
    - title: ✅Tests
      regexp: "^test(\\(.+\\))?!?:\\s.*$"
      order: 6
    - title: 📄Documentations
      regexp: "^docs(\\(.+\\))?!?:\\s.*$"
      order: 7
    - title: ⏪Reverts
      regexp: "^revert(\\(.+\\))?!?:\\s.*$"
      order: 8
    - title: Others
      order: 999
